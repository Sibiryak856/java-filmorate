CREATE TABLE IF NOT EXISTS GENRES (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	GENRE_NAME varchar(14) NOT NULL,
	CONSTRAINT GENRES_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS MPA (
	MPA_ID INTEGER NOT NULL AUTO_INCREMENT,
	MPA_NAME varchar(5) NOT NULL,
	CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS USERS (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL varchar NOT NULL,
	LOGIN varchar(255) NOT NULL,
	USER_NAME varchar(255),
	BIRTHDAY date,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS USER_FRIENDS (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	CONSTRAINT USER_FRIENDS_PK PRIMARY KEY (USER_ID,FRIEND_ID),
	CONSTRAINT USER_FRIENDS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS FILMS (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_NAME varchar(255),
	DESCRIPTION varchar(200),
	RELEASE_DATE date,
	DURATION INTEGER,
	MPA_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(MPA_ID)
);


CREATE TABLE IF NOT EXISTS FILM_LIKES (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT FILM_LIKES_PK PRIMARY KEY (FILM_ID,USER_ID),
	CONSTRAINT FILM_LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID),
	CONSTRAINT FILM_LIKES_FK_1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GENRES_PK PRIMARY KEY (FILM_ID,GENRE_ID),
	CONSTRAINT FILM_GENRES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID),
	CONSTRAINT FILM_GENRES_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRES(GENRE_ID)
);